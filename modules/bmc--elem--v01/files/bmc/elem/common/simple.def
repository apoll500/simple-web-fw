
//MODULE::

DEF IMPL_SIMPLE:ELEMENT
{
    handle_events="false";
    has_formatter="false";
    has_inputs="false";
    pass_wrapper_parameter="true";
    
    parameter_name="pdiv";
    parameter_name="wrap";
    impl
    {
        ->
        //FILE: js/elements/@PATH
        @GTEXT.BMC_INFO
        @additional_includes
        @additional_code
        //class:
        function @element_name[]_simple(@pass_wrapper_parameter[value='true',text='@element_wrapper.parameter_name_extra[end=","]']@parameter_name[sep=','])
        {
        //constructor:
            this.wrap=wrap;
            @has_formatter[value='true',text='this.formatter=null;']
            @constructor_dom_setup
            @handle_events[value='true',text='main_elements_add(this);']
            @constructor_extra
        //public:
            this.destroy=function()
            {
                @handle_events[value='true',text='main_elements_remove(this);']
                @dom_remove_simple_box
            }
            @handle_events[value='true',text='
            this.onEvent=function(type,evt)
            {
                switch(type)
                {
                    case "resize":
                        this.onResize();
                        break;
                }
            }
            ']
            this.preset=function()
            {
                @preset
            }
            /*
            this.mbox=function()
            {
                return this.d4;
            }
            */
            
        //private:
            @has_inputs[value='true',text='
            this.check_inputs=function()
            {
                this.check_inputs2("");
            }
            this.check_inputs2=function(module)
            {
                if(this.formatter!=null)
                {
                    var w=0;
                    if(adiv)w=parseInt(adiv.left_admin_box.anim_width);
                    this.formatter.update3(Math.min(600,screenx-w),"check_input",module);
                }
                this.onResize();
            }
            ']
            @handle_events[value='true',text='
            this.onResize=function()
            {
                @onResize
            }
            this.animate=function(p)
            {
            }
            this.end_anim=function()
            {
                this.onResize();
            }
            this.update=function()
            {
            }
            ']
            this.setup=function(s)
            {
                elements_setup(s,this.wrap,"simple");
            }
        }
        
        main_loader.ready();
        <-
    }
    dom_setup_simple_box
    {
        ->
            this.box=document.createElement("div");
            this.box.className="elem_@element_name[]_box";
            pdiv.appendChild(this.box);
        <-
    }
    dom_remove_simple_box
    {
        ->
                pdiv.removeChild(this.box);
        <--
    }
    preset
    {
        ->
                var o="\
                <div align='center'>\
                    loading...\
                </div>";
                this.box.innerHTML=o;
        <-
    }
}

DEF the_element_impl_simple:element,element_simple,FILE
{
    PATH="@element_name/@element_name[]_simple.js";
    OUTPUT
    {
        ->
        @impl
        <-
    }
}
